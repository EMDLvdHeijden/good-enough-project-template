all_unique_genes_hsa <- df.unique(tpm_canine_dcs_for_ABIS_hsa, gene_name)
all_unique_genes_hsa <- df.unique(tpm_canine_dcs_for_ABIS_hsa, gene_name_human_ortholog)
View(all_unique_genes)
head(all_unique_genes)
all_unique_genes_hsa <- df.unique(tpm_canine_dcs_for_ABIS_hsa, gene_name_human_ortholog)
View(all_unique_genes_hsa)
head(all_unique_genes_hsa)
write.table(all_unique_genes_hsa, file="tpm_sample_for_ABIS_hsa_evdh.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
shiny::runGitHub("ABIS", user="giannimonaco")
genes_to_remove <- c("IGBP1", "IGLV2-33", "IGHM", "IGKC", "CD19", "CD3D", "CD3G", "TRAV25", "TRAV24", "TRAV21", "TRBV19", "TRBV25-1", "TRBV18", "TRBV30", "TRBV28", "TRBV24-1")
`%!in%` <- Negate(`%in%`)
hsa_gene_list_withoutBandTcells <- subset(all_unique_genes_hsa, gene_name %!in% genes_to_remove)
hsa_gene_list_withoutBandTcells <- subset(all_unique_genes_hsa, gene_name_human_ortholog %!in% genes_to_remove)
setwd("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/Outcome_ABIS/Without_BandTcell_DEGs")
write.table(hsa_gene_list_withoutBandTcells, file="tpm_sample_for_ABIS_hsa_noBandT_evdh.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
shiny::runGitHub("ABIS", user="giannimonaco")
col <- 20
row <- 20000
mat1 <- matrix(
rexp(col*row, rate = 0.1),
ncol = col)
rownames(mat1) <- paste0('gene', 1:nrow(mat1))
colnames(mat1) <- paste0('sample', 1:ncol(mat1))
View(mat1)
View(tpm_canine_dcs)
plot(col)
knitr::opts_chunk$set(echo = TRUE)
# Load the appropriate dataframes
fpkm_spleen <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_spleen.txt")
fpkm_pbmc <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pbmc.txt")
fpkm_modc <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_modc.txt")
knitr::opts_chunk$set(echo = TRUE)
# Create a function to convert fpkm to tpm
fpkmToTpm <- function(fpkm){
exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
}
tpm_spleen <- fpkm_spleen
for (i in 2:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
for (i in 2:ncol(tpm_spleen))
print(sum(tpm_spleen[,i]))
tpm_pbmc <- fpkm_pbmc
for (i in 2:ncol(tpm_pbmc))
tpm_pbmc[,i] <- fpkmToTpm(fpkm_pbmc[,i])
for (i in 2:ncol(tpm_pbmc))
print(sum(tpm_pbmc[,i]))
tpm_modc <- fpkm_modc
for (i in 2:ncol(tpm_modc))
tpm_modc[,i] <- fpkmToTpm(fpkm_modc[,i])
for (i in 2:ncol(tpm_modc))
print(sum(tpm_modc[,i]))
View(tpm_spleen)
?apply
?all
tpm_spleen[,which(!apply(tpm_spleen==0,2,all))]
tpm_spleen
tpm_spleen[,which(!apply(tpm_spleen==0,1,all))]
View(tpm_spleen)
tpm_spleen[,which(!apply(tpm_spleen$Spleen_1==0 & tpm_spleen$Spleen_2==0 & tpm_spleen$Spleen_3==0 & tpm_spleen$Spleen_4==0,1,all))]
tpm_spleen2 <- tpm_spleen[rowSums(tpm_spleen[])>0,]
tpm_spleen <- fpkm_spleen
data.frame(tpm_spleen, row.names = 1)
for (i in 1:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
View(tpm_spleen)
data.frame(tpm_spleen, row.names = 1)
View(tpm_spleen)
tpm_spleen <- fpkm_spleen
tpm_spleen <- dataframe(tpm_spleen, rownames=1)
tpm_spleen <- fpkm_spleen
tpm_spleen <- data.frame(tpm_spleen, rownames=1)
View(tpm_spleen)
tpm_spleen <- fpkm_spleen
tpm_spleen <- data.frame(tpm_spleen, row.names=1)
View(tpm_spleen)
for (i in 1:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
View(tpm_spleen)
tpm_spleen <- fpkm_spleen
for (i in 2:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
for (i in 2:ncol(tpm_spleen))
print(sum(tpm_spleen[,i]))
tpm_spleen <- data.frame(tpm_spleen, row.names=1)
View(tpm_spleen)
tpm_spleen <- fpkm_spleen
for (i in 2:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
for (i in 2:ncol(tpm_spleen))
print(sum(tpm_spleen[,i]))
tpm_spleen <- data.frame(tpm_spleen, row.names=1)
View(tpm_spleen)
tpm_pbmc <- fpkm_pbmc
for (i in 2:ncol(tpm_pbmc))
tpm_pbmc[,i] <- fpkmToTpm(fpkm_pbmc[,i])
for (i in 2:ncol(tpm_pbmc))
print(sum(tpm_pbmc[,i]))
tpm_pbmc <- data.frame(tpm_pbmc, row.names=1)
tpm_modc <- fpkm_modc
for (i in 2:ncol(tpm_modc))
tpm_modc[,i] <- fpkmToTpm(fpkm_modc[,i])
for (i in 2:ncol(tpm_modc))
print(sum(tpm_modc[,i]))
tpm_modc <- data.frame(tpm_modc, row.names=1)
tpm_spleen2 <- tpm_spleen[rowSums(tpm_spleen[])>0,]
View(tpm_spleen2)
tpm_spleen <- tpm_spleen[rowSums(tpm_spleen[])>0,]
tpm_pbmc <- tpm_pbmc[rowSums(tpm_pbmc[])>0,]
tpm_modc <- tpm_modc[rowSums(tpm_modc[])>0,]
setwd("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/")
write.table(tpm_spleen, file="tpm_spleen_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_pbmc, file="tpm_pbmc_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_modc, file="tpm_modc_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
tpm_spleen <- fpkm_spleen
for (i in 2:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
for (i in 2:ncol(tpm_spleen))
print(sum(tpm_spleen[,i]))
# PBMC
tpm_pbmc <- fpkm_pbmc
for (i in 2:ncol(tpm_pbmc))
tpm_pbmc[,i] <- fpkmToTpm(fpkm_pbmc[,i])
for (i in 2:ncol(tpm_pbmc))
print(sum(tpm_pbmc[,i]))
# moDC
tpm_modc <- fpkm_modc
for (i in 2:ncol(tpm_modc))
tpm_modc[,i] <- fpkmToTpm(fpkm_modc[,i])
for (i in 2:ncol(tpm_modc))
print(sum(tpm_modc[,i]))
tpm_spleen <- tpm_spleen[rowSums(tpm_spleen[,2:5])>0,]
tpm_pbmc <- tpm_pbmc[rowSums(tpm_pbmc[,2:4])>0,]
tpm_modc <- tpm_modc[rowSums(tpm_modc[,2])>0,]
View(tpm_spleen)
View(tpm_spleen2)
?rowSums
tpm_modc <- tpm_modc[rowSums(tpm_modc[,2])>0,]
tpm_modc <- tpm_modc[rowSums(tpm_modc[])>0,]
tpm_pbmc <- fpkm_pbmc
for (i in 2:ncol(tpm_pbmc))
tpm_pbmc[,i] <- fpkmToTpm(fpkm_pbmc[,i])
for (i in 2:ncol(tpm_pbmc))
print(sum(tpm_pbmc[,i]))
tpm_pbmc <- data.frame(tpm_pbmc, row.names=1)
tpm_pbmc <- tpm_pbmc[rowSums(tpm_pbmc[])>0,]
tpm_spleen <- fpkm_spleen
for (i in 2:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
for (i in 2:ncol(tpm_spleen))
print(sum(tpm_spleen[,i]))
# PBMC
tpm_pbmc <- fpkm_pbmc
for (i in 2:ncol(tpm_pbmc))
tpm_pbmc[,i] <- fpkmToTpm(fpkm_pbmc[,i])
for (i in 2:ncol(tpm_pbmc))
print(sum(tpm_pbmc[,i]))
# moDC
tpm_modc <- fpkm_modc
for (i in 2:ncol(tpm_modc))
tpm_modc[,i] <- fpkmToTpm(fpkm_modc[,i])
for (i in 2:ncol(tpm_modc))
print(sum(tpm_modc[,i]))
tpm_modc[sum(tpm_modc[,2])>0,]
tpm_spleen <- fpkm_spleen
for (i in 2:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
for (i in 2:ncol(tpm_spleen))
print(sum(tpm_spleen[,i]))
# PBMC
tpm_pbmc <- fpkm_pbmc
for (i in 2:ncol(tpm_pbmc))
tpm_pbmc[,i] <- fpkmToTpm(fpkm_pbmc[,i])
for (i in 2:ncol(tpm_pbmc))
print(sum(tpm_pbmc[,i]))
# Remove those that have only 0 as tpm (as these were not expressed)
tpm_spleen <- tpm_spleen[rowSums(tpm_spleen[,2:5])>0,]
tpm_pbmc <- tpm_pbmc[rowSums(tpm_pbmc[,2:4])>0,]
# Save these files
setwd("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/")
write.table(tpm_spleen, file="tpm_spleen_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_pbmc, file="tpm_pbmc_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
rm(spleen2)
rm(tpm_spleen2)
View(tpm_spleen)
# Per population
fpkm_pop1 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop1.txt")
fpkm_pop2 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop2c.txt")
fpkm_pop1 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop1.txt")
fpkm_pop2 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop2.txt")
fpkm_pop3 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop3.txt")
fpkm_ppo4 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop4.txt")
# pop1
tpm_pop1 <- fpkm_pop1
for (i in 2:ncol(tpm_pop1))
tpm_pop1[,i] <- fpkmToTpm(fpkm_pop1[,i])
for (i in 2:ncol(tpm_pop1))
print(sum(tpm_pop1[,i]))
# pop2
tpm_pop2 <- fpkm_pop2
for (i in 2:ncol(tpm_pop2))
tpm_pop2[,i] <- fpkmToTpm(fpkm_pop2[,i])
for (i in 2:ncol(tpm_pop2))
print(sum(tpm_pop2[,i]))
# pop3
tpm_pop3 <- fpkm_pop3
for (i in 2:ncol(tpm_pop3))
tpm_pop3[,i] <- fpkmToTpm(fpkm_pop3[,i])
for (i in 2:ncol(tpm_pop3))
print(sum(tpm_pop3[,i]))
# pop4
tpm_pop4 <- fpkm_pop4
fpkm_pop1 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop1.txt")
fpkm_pop2 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop2.txt")
fpkm_pop3 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop3.txt")
fpkm_pop4 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop4.txt")
tpm_pop1 <- fpkm_pop1
for (i in 2:ncol(tpm_pop1))
tpm_pop1[,i] <- fpkmToTpm(fpkm_pop1[,i])
for (i in 2:ncol(tpm_pop1))
print(sum(tpm_pop1[,i]))
# pop2
tpm_pop2 <- fpkm_pop2
for (i in 2:ncol(tpm_pop2))
tpm_pop2[,i] <- fpkmToTpm(fpkm_pop2[,i])
for (i in 2:ncol(tpm_pop2))
print(sum(tpm_pop2[,i]))
# pop3
tpm_pop3 <- fpkm_pop3
for (i in 2:ncol(tpm_pop3))
tpm_pop3[,i] <- fpkmToTpm(fpkm_pop3[,i])
for (i in 2:ncol(tpm_pop3))
print(sum(tpm_pop3[,i]))
# pop4
tpm_pop4 <- fpkm_pop4
for (i in 2:ncol(tpm_pop4))
tpm_pop4[,i] <- fpkmToTpm(fpkm_pop4[,i])
for (i in 2:ncol(tpm_pop4))
print(sum(tpm_pop4[,i]))
modc_row_sub = apply(tpm_modc, 1, function(row) all(row !=0 ))
tpm_modc[modc_row_sub,]
fpkm_modc <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_modc.txt")
tpm_modc <- fpkm_modc
for (i in 2:ncol(tpm_modc))
tpm_modc[,i] <- fpkmToTpm(fpkm_modc[,i])
for (i in 2:ncol(tpm_modc))
print(sum(tpm_modc[,i]))
modc_row_sub = apply(tpm_modc, 1, function(row) all(row !=0 ))
modc_row_sub
View(tpm_modc)
tpm_modc <- tpm_modc[tpm_modc$moDC != 0, ]
View(tpm_modc)
fpkm_spleen <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_spleen.txt")
fpkm_pbmc <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pbmc.txt")
fpkm_modc <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_modc.txt")
# Per population
fpkm_pop1 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop1.txt")
fpkm_pop2 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop2.txt")
fpkm_pop3 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop3.txt")
fpkm_pop4 <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/fpkm_pop4.txt")
# Make them into tpm
# Spleen
tpm_spleen <- fpkm_spleen
for (i in 2:ncol(tpm_spleen))
tpm_spleen[,i] <- fpkmToTpm(fpkm_spleen[,i])
for (i in 2:ncol(tpm_spleen))
print(sum(tpm_spleen[,i]))
# PBMC
tpm_pbmc <- fpkm_pbmc
for (i in 2:ncol(tpm_pbmc))
tpm_pbmc[,i] <- fpkmToTpm(fpkm_pbmc[,i])
for (i in 2:ncol(tpm_pbmc))
print(sum(tpm_pbmc[,i]))
print(sum(tpm_spleen[,i]))
# moDC
tpm_modc <- fpkm_modc
for (i in 2:ncol(tpm_modc))
tpm_modc[,i] <- fpkmToTpm(fpkm_modc[,i])
for (i in 2:ncol(tpm_modc))
print(sum(tpm_modc[,i]))
# pop1
tpm_pop1 <- fpkm_pop1
for (i in 2:ncol(tpm_pop1))
tpm_pop1[,i] <- fpkmToTpm(fpkm_pop1[,i])
for (i in 2:ncol(tpm_pop1))
print(sum(tpm_pop1[,i]))
# pop2
tpm_pop2 <- fpkm_pop2
for (i in 2:ncol(tpm_pop2))
tpm_pop2[,i] <- fpkmToTpm(fpkm_pop2[,i])
for (i in 2:ncol(tpm_pop2))
print(sum(tpm_pop2[,i]))
# pop3
tpm_pop3 <- fpkm_pop3
for (i in 2:ncol(tpm_pop3))
tpm_pop3[,i] <- fpkmToTpm(fpkm_pop3[,i])
for (i in 2:ncol(tpm_pop3))
print(sum(tpm_pop3[,i]))
# pop4
tpm_pop4 <- fpkm_pop4
for (i in 2:ncol(tpm_pop4))
tpm_pop4[,i] <- fpkmToTpm(fpkm_pop4[,i])
for (i in 2:ncol(tpm_pop4))
print(sum(tpm_pop4[,i]))
# Remove those that have only 0 as tpm (as these were not expressed)
tpm_spleen <- tpm_spleen[rowSums(tpm_spleen[,2:5])>0,]
tpm_pbmc <- tpm_pbmc[rowSums(tpm_pbmc[,2:4])>0,]
tpm_modc <- tpm_modc[tpm_modc$moDC != 0, ] # it's different for modc because it only has one numerical column
tpm_pop1 <- tpm_pop1[rowSums(tpm_pop1[,2:3])>0,]
tpm_pop2 <- tpm_pop2[rowSums(tpm_pop2[,2:3])>0,]
tpm_pop3 <- tpm_pop3[tpm_pop3$Spleen_3 != 0, ] # different because it only has one numerical column
tpm_pop4 <- tpm_pop4[rowSums(tpm_pop4[,2:3])>0,]
setwd("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/")
write.table(tpm_spleen, file="tpm_spleen_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_pbmc, file="tpm_pbmc_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_modc, file="tpm_modc_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_pop1, file="tpm_pop1_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_pop2, file="tpm_pop2_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_pop3, file="tpm_pop3_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
write.table(tpm_pop4, file="tpm_pop4_nett.txt", append = FALSE, sep= "\t", row.names = FALSE, col.names = TRUE)
screeplot(p2, hline = 80)
tpm_canine_dcs <- read.delim("/Volumes/Elements_of_Elise/Postdoc_VI_UU/Andreja/Analysis_elise/DC_data/tpm_sample_evdh.txt")
# Select the relevant columns for the pca plot
pca_data <- tpm_canine_dcs[,c(1,5:22)]
# Change colnames
for (col in 1:ncol(pca_data)){
colnames(pca_data)[col] <-  sub("_tpm*", "", colnames(pca_data)[col])
}
# Change gene_ID variable to rownames
pca_data <- data.frame(pca_data, row.names = 1)
# Create a dataframe for the metadata for this data
metadata <- data.frame(row.names = colnames(pca_data))
# to add an empty column with NAs metadata$xxx <- rep(NA, ncol(pca_data))
# Add relevant data
metadata$source <- c(rep("spleen", 10), rep("PBMC", 5), rep("moDC", 3))
metadata$population <- c("1", "2", "3", "4", rep(c("1", "2", "4"),2), "1", "2", "1", "2", "4", rep(NA,3))
metadata$donor <- c(rep("S1", 4), rep("S2", 3), rep("S3", 3), rep("P1", 2), rep("P2", 3), c("mo1", "mo2", "mo3"))
# Separate df without moDC
pca_data1 <- pca_data[,-c(16:18)]
metadata1 <- metadata[-c(16:18),]
# For the complete dataset
p <- pca(pca_data, metadata = metadata, removeVar = 0.1)
library(PCAtools)
library(PCAtools)
p <- pca(pca_data, metadata = metadata, removeVar = 0.1)
# For spleen and PBMC samples only
p1 <- pca(pca_data1, metadata1, removeVar = 0.1)
screeplot(p, hline = 80)
biplot(p)
biplot(p, colby = 'population', shape = 'source', legendPosition = 'bottom')
screeplot(p1, hline = 80)
biplot(p1, colby = 'population', shape = 'source', legendPosition = 'bottom')
pca_data2 <- pca_data1[,-7]
metadata2 <- metadata1[-7,]
p2 <- pca(pca_data2, metadata2, removeVar = 0.1)
screeplot(p2, hline = 80)
install.packages("lintr")
library(lintr)
lintr("Script Bayesian HipMGR_v3.Rmd")
lint("Script Bayesian HipMGR_v3.Rmd")
lint(src/"Script Bayesian HipMGR_v3.Rmd")
lint("/Users/emdlvanderheijden/Documents/Work/Postdoc_VI_UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian"/"Script Bayesian HipMGR_v3.Rmd")
lint(/Users/emdlvanderheijden/Documents/Work/Postdoc_VI_UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian"/"Script Bayesian HipMGR_v3.Rmd")
lint(Users/emdlvanderheijden/Documents/Work/Postdoc_VI_UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian"/"Script Bayesian HipMGR_v3.Rmd")
?lint
setwd("/Users/emdlvanderheijden/Documents/Work/Postdoc_VI_UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian")
setwd(/Users/emdlvanderheijden/Documents/Work/Postdoc_VI_UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian)
setwd(/Users/emdlvanderheijden/Documents/Work/Postdoc_VI\ _UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian)
setwd(Users/emdlvanderheijden/Documents/Work/Postdoc_VI\ _UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian)
setwd("Users/emdlvanderheijden/Documents/Work/Postdoc_VI _UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian")
setwd("Users/emdlvanderheijden/Documents/Work/Postdoc_VI_UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian")
setwd("Users/emdlvanderheijden/Documents/Work/"Postdoc_VI _UU"/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian")
setwd(Users/emdlvanderheijden/Documents/Work/"Postdoc_VI _UU"/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian)
setwd(/Users/emdlvanderheijden/Documents/Work/"Postdoc_VI _UU"/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian)
setwd(/Users/emdlvanderheijden/Documents/Work/"Postdoc_VI _UU"/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian/)
setwd("~/Documents/Work/Postdoc_VI _UU/Research/Projects/Bayesian_work/Re-Analysis_Ch3_Bayesian")
lint("Script Bayesian HipMGR_v3.Rmd")
lint("Script Bayesian HipMGR_v3.Rmd")
lint("Script Bayesian HipMGR_v3.Rmd")
lint("Script Bayesian HipMGR_v3.Rmd")
lint("Script Bayesian HipMGR_v3.Rmd")
setwd("~/Documents/Work/Postdoc_VI _UU/Research/Courses/Writing_reproducible_code/good-enough-project-template")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
setwd("~/Documents/Work/Postdoc_VI _UU/Research/Courses/Writing_reproducible_code/good-enough-project-template")
setwd("~/Documents/Work/Postdoc_VI _UU/Research/Courses/Writing_reproducible_code/good-enough-project-template")
lint("Script Bayesian HipMGR_v4.Rmd")
library(lintr)
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
lint("Script Bayesian HipMGR_v4.Rmd")
# Create a function to convert fpkm to tpm
fpkmToTpm <- function(fpkm){
exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
}
# Create a function to convert fpkm to tpm
fpkmToTpm <- function(fpkm){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM.
#' from the FPKM of a sample.
#' @param x The first value, this should be the FPKM.
#' @return This is the TPM.
exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
}
?fpkmtotpm
?fpkmToTpm
View(fpkmToTpm)
View(fpkmToTpm)
rm(fpkmToTpm())
fpkm_to_tpm <- function(fpkm){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM.
#' from the FPKM of a sample.
#' @param x The first value, this should be the FPKM.
#' @return This is the TPM.
exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
}
??fpkm_to_tpm
install.packages("docstring")
library(docstring)
# Create a function to convert fpkm to tpm
fpkmtotpm <- function(fpkm){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM.
#' from the FPKM of a sample.
#' @param x The first value, this should be the FPKM.
#' @return This is the TPM.
exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
}
?fpkmtotpm
exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
# Create a function to convert fpkm to tpm
fpkmtotpm <- function(fpkm){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM,
#' from the FPKM of a sample.
#' @param x The first value, this should be the FPKM.
#' @return This is the TPM.
exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
}
# Create a function to convert fpkm to tpm
fpkmtotpm <- function(fpkm){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM,
#' from the FPKM of a sample.
#' @param x The first value, this should be the FPKM.
#' @return This is the TPM.
exp(log(fpkm) - log(sum(fpkm)) + log(1e6))
}
?fpkmtotpm
fpkmtotpm <- function(x){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM,
#' from the FPKM of a sample.
#' @param x The first value, input the FPKM.
#' @return This is the TPM.
exp(log(x) - log(sum(x)) + log(1e6))
}
?fpkmtotpm
fpkmtotpm <- function(x){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM,
#' from the FPKM of a sample.
#' @param x The first value, input the FPKM.
#' @return This is the TPM.
exp(log(x) - log(sum(x)) + log(1e6))
}
fpkmtotpm <- function(x){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM,
#' from the FPKM of a sample.
#' @param x The first value, input the FPKM.
#' @return This is the TPM.
exp(log(x) - log(sum(x)) + log(1e6))
}
?fpkmtotpm
# Create a function to convert fpkm to tpm
fpkmtotpm <- function(x){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM,
#' from the FPKM of a sample.
#' @param x The first value, input the FPKM.
#' @return This is the TPM.
exp(log(x) - log(sum(x)) + log(1e6))
}
?fpkmtotpm
library(docstring)
# Create a function to convert fpkm to tpm
fpkmtotpm <- function(x){
#' @title Convert FPKM to TPM.
#' @description This function calculates the TPM,
#' from the FPKM of a sample.
#' @param x The first value, input the FPKM.
#' @return This is the TPM.
exp(log(x) - log(sum(x)) + log(1e6))
}
?fpkmtotpm
